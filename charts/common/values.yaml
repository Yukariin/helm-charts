# Example values for common library chart
# This file documents the structure and available options

# Global settings
nameOverride: ""
fullnameOverride: ""

# Image pull secrets
imagePullSecrets: []

# Service account configuration
serviceAccount:
  create: true
  automount: true
  annotations: {}
  labels: {}
  name: ""

# Pod-level security context
podSecurityContext: {}
  # fsGroup: 2000

# Container-level security context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# Pod annotations and labels
podAnnotations: {}
podLabels: {}

# Node selection
nodeSelector: {}
tolerations: []
affinity: {}

# Additional volumes (applied to all deployments)
volumes: []

# Multiple deployments configuration
deployments:
  main:
    replicaCount: 1
    image:
      repository: nginx
      tag: "1.21"
      pullPolicy: IfNotPresent
    
    # Container ports
    ports:
      - name: http
        containerPort: 80
        protocol: TCP
    
    # Environment variables
    env:
      ENV_VAR: "value"
      # Complex env var example:
      # COMPLEX_VAR:
      #   valueFrom:
      #     secretKeyRef:
      #       name: my-secret
      #       key: password
    
    # Environment from configmaps/secrets
    envFrom: []
    # - configMapRef:
    #     name: my-configmap
    # - secretRef:
    #     name: my-secret
    
    # Health checks
    livenessProbe:
      httpGet:
        path: /
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
    
    readinessProbe:
      httpGet:
        path: /
        port: http
      initialDelaySeconds: 5
      periodSeconds: 5
    
    startupProbe: {}
    
    # Resource limits and requests
    resources:
      limits:
        cpu: 500m
        memory: 512Mi
      requests:
        cpu: 250m
        memory: 256Mi
    
    # Autoscaling configuration
    autoscaling:
      enabled: false
      minReplicas: 1
      maxReplicas: 100
      targetCPUUtilizationPercentage: 80
      targetMemoryUtilizationPercentage: 80
      customMetrics: []
      behavior: {}
    
    # Sidecar containers
    sidecars:
      - name: backup
        image:
          repository: backup-tool
          tag: latest
          pullPolicy: IfNotPresent
        env:
          BACKUP_SCHEDULE: "0 2 * * *"
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
        # Which persistence volumes this sidecar should access
        persistenceAccess:
          - data
        volumeMounts:
          - name: backup-config
            mountPath: /etc/backup
    
    # Additional volumes for this deployment
    volumes: []
    
    # Additional volume mounts for main container
    volumeMounts: []
    
    # Override global settings for this deployment
    nodeSelector: {}
    tolerations: []
    affinity: {}
    podSecurityContext: {}
    securityContext: {}
    imagePullSecrets: []

  # Example second deployment
  worker:
    replicaCount: 2
    image:
      repository: worker-app
      tag: latest
    env:
      WORKER_TYPE: "background"
    resources:
      limits:
        cpu: 200m
        memory: 256Mi

# Multiple services configuration
services:
  main:
    type: ClusterIP
    ports:
      - name: http
        port: 80
        targetPort: http
        protocol: TCP
    annotations: {}
    labels: {}
    # Optional: specify which deployment this service targets
    # component: main  # targets deployment with component label
    
  # Example additional service
  metrics:
    type: ClusterIP
    ports:
      - name: metrics
        port: 9090
        targetPort: metrics
        protocol: TCP
    # Custom selector (overrides default)
    selector:
      app.kubernetes.io/name: my-app
      app.kubernetes.io/component: main

# Multiple ingress configuration
ingress:
  main:
    enabled: false
    className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: ImplementationSpecific
            serviceName: ""  # defaults to main service
            servicePort: 80
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

# Multiple persistent volumes
persistence:
  data:
    enabled: true
    size: 1Gi
    accessMode: ReadWriteOnce
    accessModes: []  # Alternative to accessMode
    storageClass: ""
    mountPath: /data
    subPath: ""
    readOnly: false
    existingClaim: ""
    annotations: {}
    labels: {}
    selector: {}
    volumeName: ""
    dataSource: {}
    dataSourceRef: {}
  
  config:
    enabled: false
    size: 100Mi
    accessMode: ReadWriteOnce
    storageClass: ""
    mountPath: /config
